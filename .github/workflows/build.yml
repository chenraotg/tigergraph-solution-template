# This is a basic workflow to help you get started with Actions

name: Data360 Build

env:
  AWS_S3_BUCKET: tigergraph-build-artifacts
  AWS_REGION: us-west-1
  AWS_S3_URL: https://tigergraph-build-artifacts.s3-us-west-1.amazonaws.com/

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

  workflow_dispatch:

jobs:
  buildnumber:
    name: Generate Build Number
    runs-on: ubuntu-18.04
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
      - name: Generate build number
        if: github.ref == 'refs/heads/dev'
        id: buildnumber
        uses: einaregilsson/build-number@v3 
        with:
          token: ${{secrets.github_token}}
        
      - name: Set build number to env
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "BUILD_NUMBER=${{ steps.buildnumber.outputs.build_number }}" >> $GITHUB_ENV

      - name: Set build number to 0
        if: github.ref != 'refs/heads/dev'
        run: |
          echo "BUILD_NUMBER=0" >> $GITHUB_ENV
          
  web-ui-lint:
    name: Web UI Lint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Cache Node modules
        uses: actions/cache@v2
        env:
          cache-name: node-modules
        with:
          path: ${{ github.workspace }}/web-ui/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package.json') }}

      - name: Set up Node modules
        run: yarn --ignore-engines
        working-directory: web-ui

      - name: Run lint
        run: yarn lint-staged
        working-directory: web-ui

  web-server-lint:
    name: Web Server Lint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Cache Node modules
        uses: actions/cache@v2
        env:
          cache-name: node-modules
        with:
          path: ${{ github.workspace }}/web-server/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package.json') }}

      - name: Set up Node modules
        run: yarn --ignore-engines
        working-directory: web-server

      - name: Run lint
        run: yarn lint
        working-directory: web-server
     
  web-ui-test:
    name: Web UI Test
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Cache Node modules
        uses: actions/cache@v2
        env:
          cache-name: node-modules
        with:
          path: ${{ github.workspace }}/web-ui/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package.json') }}

      - name: Set up Node modules
        run: yarn --ignore-engines
        working-directory: web-ui

      - name: Run test
        run: yarn test
        working-directory: web-ui

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: web-ui-coverage
          path: web-ui/coverage
         
  web-server-test:
    name: Web Server Test
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Cache Node modules
        uses: actions/cache@v2
        env:
          cache-name: node-modules
        with:
          path: ${{ github.workspace }}/web-server/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package.json') }}

      - name: Set up Node modules
        run: yarn --ignore-engines
        working-directory: web-server

      - name: Run test
        run: yarn test --watch false --coverage --passWithNoTests
        working-directory: web-server

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: web-server-coverage
          path: web-server/coverage
  
  web-ui-build:
    name: Web UI Build
    needs: [  web-ui-lint, web-ui-test, buildnumber ]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Cache Node modules
        uses: actions/cache@v2
        env:
          cache-name: node-modules
        with:
          path: ${{ github.workspace }}/web-ui/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package.json') }}

      - name: Set up Node modules
        run: yarn --ignore-engines
        working-directory: web-ui

      - name: Print the build number
        run: echo "Build number is ${{ needs.buildnumber.outputs.build_number }}"

      - uses: microsoft/variable-substitution@v1 
        with:
            files: 'web-ui/src/version.json'
        env:
            build: ${{ needs.buildnumber.outputs.build_number }}

      - name: Build static files
        run: |
          yarn build -c production
          tar zcvf data360.tar.gz build && rm -rf build
        working-directory: web-ui
        
      - name: Generate third-party license report
        run: |
          yarn global add license-checker
          yarn licenses list
        working-directory: web-ui
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: web-ui-release
          path: web-ui/data360.tar.gz
   
  web-server-build:
    name: Web Server Build
    needs: [  web-server-lint, web-server-test, buildnumber]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache Node modules
        uses: actions/cache@v2
        id: cache
        env:
          cache-name: server-node-modules
        with:
          path: ${{ github.workspace }}/web-server/node_modules
          key: ${{ runner.os }}-server-${{ env.cache-name }}-${{ hashFiles('package.json') }}=

      - name: Set up Node modules
        run: |
          npm install
        working-directory: web-server

      - name: Print the build number
        run: echo "Build number is ${{ needs.buildnumber.outputs.build_number }}"
      
      - name: Build static files
        run: |
          npm run build
          tar zcvf data360-server.tar.gz dist package.json package-lock.json && rm -rf dist
        working-directory: web-server
        
      - name: Generate third-party license report
        run: |
          npm install -g license-checker
          license-checker
        working-directory: web-server
      
      - name: Upload Configs
        uses: actions/upload-artifact@v2
        with:
          name: web-config-release
          path: configs/
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: web-server-release
          path: web-server/data360-server.tar.gz

  getconfig:
    name: Get deploy config
    if: github.ref == 'refs/heads/master'
    needs: [web-server-build, web-ui-build]
    runs-on: ubuntu-18.04
    outputs:
      configJson: ${{ steps.set-var.outputs.configJson }}
    steps:
      - uses: actions/checkout@v2
      - name: export deploy config
        id: set-var
        run: |
          content="$(cat ./configs/config.json)"
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=configJson::$content"
  deploy:
    name: deploy
    needs: [getconfig]
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        value: ${{ fromJson(needs.getconfig.outputs.configJson.deploy) }}
    steps: 
     - uses: actions/checkout@v2
     - name: Setup Node 16
       uses: actions/setup-node@v1
       with:
          node-version: 16

     - name: Cache Node modules
       uses: actions/cache@v2
       env:
          cache-name: node-modules
       with:
          path: ${{ github.workspace }}/web-ui/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package.json') }}

     - name: Set up Node modules
       run: yarn --ignore-engines
       working-directory: web-ui

     - name: Build front end static files
       run: |
          yarn build -c production
          tar zcvf web-ui.tar.gz build && rm -rf build
       working-directory: web-ui
     - name: deploly web-ui
       uses: appleboy/scp-action@master
       with:
         host: ${{ matrix.value.ip }}
         username: ${{ secrets.SSH_USERNAME }}
         key: ${{ secrets.SSH_KEY }}
         port: ${{ secrets.SSH_PORT }}
         source: "./web-ui/web-ui.tar.gz"
         target: "destination/web-ui"
     
     - name: Setup Node 12
       uses: actions/setup-node@v1
       with:
          node-version: 12

     - name: Cache Node modules
       uses: actions/cache@v2
       id: cache
       env:
          cache-name: server-node-modules
       with:
          path: ${{ github.workspace }}/web-server/node_modules
          key: ${{ runner.os }}-server-${{ env.cache-name }}-${{ hashFiles('package.json') }}=

     - name: Set up Node modules
       run: |
          npm install
       working-directory: web-server
      
     - name: Build static files
       run: |
          npm run build
          tar zcvf web-server.tar.gz dist package.json package-lock.json && rm -rf dist
       working-directory: web-server
     - name: deploy back end static files
       uses: appleboy/scp-action@master
       with:
         host: ${{ matrix.value.ip }}
         username: ${{ secrets.SSH_USERNAME }}
         key: ${{ secrets.SSH_KEY }}
         port: ${{ secrets.SSH_PORT }}
         source: "./web-server/web-server.tar.gz"
         target: "destination/web-server"
          
  web-e2e-test:
    runs-on: ubuntu-latest
    needs: [  deploy ]
    defaults:
      run:
        working-directory: ./web-ui
    steps: 
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2
        with:
            node:version: '14'
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          command: yarn cypress run
          working-directory: web-ui
      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: web-ui/cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: web-ui/cypress/videos

